---
# Configuration of the Barracuda CloudGen Firewall 8.0 REST API
# Steps
#  - Wait for login page
#  - Change admin password
#  - Create REST API admin 
#  - Get an REST API token
#  - Add network object, DST NAT rule
#  - Delete REST API token

### Set CGF base URL ###
- set_fact:
    cgf_base_url: "https://{{ hostvars[inventory_hostname].ansible_host }}:{{ hostvars[inventory_hostname].ansible_port }}"
    cgf_rest_admin: "restadmin"
    cgf_access_token_name: "CGFQuickstartToken"

- name: Wait 300 seconds for port {{ hostvars[inventory_hostname].ansible_port }} to become open on the host, don't start checking for 5 seconds
  wait_for:
    host: "{{ hostvars[inventory_hostname].ansible_host }}"
    port: "{{ hostvars[inventory_hostname].ansible_port }}"
    timeout: 600
  become: no
  delegate_to: localhost

- debug:
    msg: "List of CGFs {{ ansible_play_hosts }}"
    
- debug:
    msg: "Current CGF {{ inventory_hostname }}"

### CGF Auth Token ###
- include_tasks: cgf-api-token-get.yml
  vars:
    request_url: "{{ cgf_base_url }}"
    request_user: "{{ cgf_rest_admin }}"
    request_password: "{{ cgf_password }}"
    request_tokenname: "{{ cgf_access_token_name }}"

- debug:
    msg: "Received API token {{ cgf_access_token }}"

### CGF Enable IPS ###
- include_tasks: cgf-patch-item.yml
  vars:
    request_name: "Enable IPS"
    request_url: "{{ cgf_base_url }}"
    request_path: "/rest/config/v1/forwarding-firewall/ips"
    request_token: "{{ cgf_access_token }}"
    request_body: |
        {
            "rcsMessage": "Enabling IPS",
            "enable": true,
            "reportOnly": false,
            "scanSsl": true
        }

### CGF Enable IPS ###
- include_tasks: cgf-get-item.yml
  vars:
    request_name: "Check IPS"
    request_url: "{{ cgf_base_url }}"
    request_path: "/rest/config/v1/forwarding-firewall/ips"
    request_token: "{{ cgf_access_token }}"

### CGF Load network objects ###
- name: Read network objects from JSON file
  set_fact:
    network_objects: "{{ lookup('template', './network_objects.json') }}"

### CGF Create network objects ###
- include_tasks: cgf-create-replace-item.yml
  vars:
    request_name: "{{ item.name }}"
    request_url: "{{ cgf_base_url }}"
    request_path: "/rest/config/v1/forwarding-firewall/objects/networks"
    request_token: "{{ cgf_access_token }}"
    request_body: "{{ item }}"
  with_items: "{{ network_objects.objects }}"

### CGF Load firewall rules ###
- name: Read rules from JSON file
  set_fact:
    rulebase: "{{ lookup('template', './rules.json') }}"

### CGF Create firewall rules ###
- include_tasks: cgf-create-replace-item.yml
  vars:
    request_name: "{{ item.name }}"
    request_url: "{{ cgf_base_url }}"
    request_path: "/rest/config/v1/forwarding-firewall/rules"
    request_token: "{{ cgf_access_token }}"
    request_body: "{{ item }}"
  with_items: "{{ rulebase.rules }}"

### CGF Auth Token delete ###
- include_tasks: cgf-api-token-delete.yml
  vars:
    request_url: "{{ cgf_base_url }}"
    request_user: "{{ cgf_rest_admin }}"
    request_token: "{{ cgf_access_token }}"
    request_tokenname: "{{ cgf_access_token_name }}"

### WAF Join cluster ###
#- include_tasks: waf-set-item.yml
#  vars:
#    request_comment: "Join cluster"
#    request_url: "{{ waf_base_url }}"
#    request_path: "/restapi/v3/cluster/nodes"
#    request_body: '{ "ip-address": "{{ hostvars[ansible_play_hosts[0]].ansible_host }}" }'
#    body_format: json
#  when: inventory_hostname.find("VM-WAF-0") == -1
#  when: inventory_hostname != ansible_play_hosts[0]

